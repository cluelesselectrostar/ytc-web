{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/yanni/Documents/App_Development/yanni-webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/yanni/Documents/App_Development/yanni-webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/yanni/Documents/App_Development/yanni-webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/yanni/Documents/App_Development/yanni-webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/yanni/Documents/App_Development/yanni-webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/yanni/Documents/App_Development/yanni-webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import GeoChart from'./Geochart';// import coviddata from './covid.json';\nimport React,{useEffect,useRef,useState,Component}from\"react\";import data from'./custom.geo.json';import'./worldmap.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WorldMap=/*#__PURE__*/function(_Component){_inherits(WorldMap,_Component);var _super=_createSuper(WorldMap);function WorldMap(props){var _this;_classCallCheck(this,WorldMap);_this=_super.call(this,props);var today=new Date();var yesterday=new Date(today);yesterday.setDate(yesterday.getDate()-1);// just to be safe, limit data to 1 days ago\nyesterday.toDateString();console.log(yesterday);var dd=String(yesterday.getDate()).padStart(2,'0');var mm=String(yesterday.getMonth()+1).padStart(2,'0');//January is 0!\nvar yyyy=yesterday.getFullYear();var date_string=yyyy+'-'+mm+'-'+dd;_this.state={property:\"total_cases\",today:date_string,date:date_string,coviddata:[]};return _this;}_createClass(WorldMap,[{key:\"componentWillMount\",value:function(){var _componentWillMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this2=this;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fetch('https://covid.ourworldindata.org/data/owid-covid-data.json').then(function(response){return response.json();}).then(function(data){_this2.setState({coviddata:data});console.log(data);});case 1:case\"end\":return _context.stop();}}},_callee);}));function componentWillMount(){return _componentWillMount.apply(this,arguments);}return componentWillMount;}()},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(GeoChart,{data:data,coviddata:this.props.import_covid===null?this.state.coviddata:this.props.import_covid,property:this.state.property,date:this.state.date,className:\"geochart\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Specify your search\"}),/*#__PURE__*/_jsxs(\"div\",{class:\"row align-items-center justify-content-center \",children:[/*#__PURE__*/_jsx(\"div\",{class:\"col-md-4\",children:/*#__PURE__*/_jsx(\"h5\",{children:\"Coronavirus Property\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"select\",{value:this.state.property,onChange:function onChange(event){return _this3.setState({property:event.target.value});},style:{width:\"100%\"},children:[/*#__PURE__*/_jsx(\"option\",{value:\"reproduction_rate\",children:\"R Rate\"}),/*#__PURE__*/_jsx(\"option\",{value:\"new_cases\",children:\"New Cases\"}),/*#__PURE__*/_jsx(\"option\",{value:\"new_cases_per_million\",children:\"New Cases Per Million\"}),/*#__PURE__*/_jsx(\"option\",{value:\"total_cases\",children:\"Total Cases\"}),/*#__PURE__*/_jsx(\"option\",{value:\"total_cases_per_million\",children:\"Total Cases Per Million\"}),/*#__PURE__*/_jsx(\"option\",{value:\"new_deaths\",children:\"New Deaths\"}),/*#__PURE__*/_jsx(\"option\",{value:\"new_deaths_per_million\",children:\"New Deaths Per Million\"}),/*#__PURE__*/_jsx(\"option\",{value:\"total_cases\",children:\"Total Deaths\"}),/*#__PURE__*/_jsx(\"option\",{value:\"total_deaths_per_million\",children:\"Total Deaths Per Million\"}),/*#__PURE__*/_jsx(\"option\",{value:\"new_tests\",children:\"New Tests\"}),/*#__PURE__*/_jsx(\"option\",{value:\"new_tests_per_thousand\",children:\"New Tests Per Thousand\"}),/*#__PURE__*/_jsx(\"option\",{value:\"total_tests\",children:\"Total Tests\"}),/*#__PURE__*/_jsx(\"option\",{value:\"total_tests_per_thousand\",children:\"Total Tests Per Thousand\"}),/*#__PURE__*/_jsx(\"option\",{value:\"total_vaccinations\",children:\"Total Vaccinations\"}),/*#__PURE__*/_jsx(\"option\",{value:\"total_vaccinations_per_hundred\",children:\"Total Vaccinations Per Hundred\"}),/*#__PURE__*/_jsx(\"option\",{value:\"people_vaccinated\",children:\"People Vaccinated\"}),/*#__PURE__*/_jsx(\"option\",{value:\"people_vaccinated_per_hundred\",children:\"People Vaccinated Per Hundred\"}),/*#__PURE__*/_jsx(\"option\",{value:\"stringency_index\",children:\"Stringency Index\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"row align-items-center justify-content-center mt-2\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"col-md-4\",children:/*#__PURE__*/_jsx(\"h5\",{children:\"Data collection date\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"col-md-4\",children:/*#__PURE__*/_jsx(\"input\",{class:\"mt-2\",type:\"date\",id:\"start\",name:\"trip-start\",value:this.state.date,min:\"2020-01-01\",max:this.state.today,style:{width:\"100%\"},onChange:function onChange(event){return _this3.setState({date:event.target.value});}})})]})]});}}]);return WorldMap;}(Component);export default WorldMap;","map":{"version":3,"sources":["C:/Users/yanni/Documents/App_Development/yanni-webpage/src/covid_tracker/worldmap.js"],"names":["GeoChart","React","useEffect","useRef","useState","Component","data","WorldMap","props","today","Date","yesterday","setDate","getDate","toDateString","console","log","dd","String","padStart","mm","getMonth","yyyy","getFullYear","date_string","state","property","date","coviddata","fetch","then","response","json","setState","import_covid","event","target","value","width"],"mappings":"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","sourcesContent":["import GeoChart from './Geochart';\r\n// import coviddata from './covid.json';\r\nimport React, { useEffect, useRef, useState, Component } from \"react\";\r\nimport data from './custom.geo.json';\r\nimport './worldmap.css';\r\n\r\nclass WorldMap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const today = new Date()\r\n        const yesterday = new Date(today)\r\n        yesterday.setDate(yesterday.getDate() - 1) // just to be safe, limit data to 1 days ago\r\n        yesterday.toDateString()\r\n        console.log(yesterday);\r\n\r\n        var dd = String(yesterday.getDate()).padStart(2, '0');\r\n        var mm = String(yesterday.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = yesterday.getFullYear();\r\n\r\n        var date_string = yyyy + '-' + mm + '-' + dd;\r\n\r\n        this.state = {\r\n            property: \"total_cases\",\r\n            today: date_string,\r\n            date: date_string,\r\n            coviddata: []\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        fetch('https://covid.ourworldindata.org/data/owid-covid-data.json')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    coviddata: data\r\n                });\r\n                console.log(data);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <GeoChart\r\n                        data={data}\r\n                        coviddata={\r\n                            (this.props.import_covid === null) ? this.state.coviddata : this.props.import_covid\r\n                        }\r\n                        property={this.state.property}\r\n                        date={this.state.date}\r\n                        className = \"geochart\"\r\n                    />\r\n                </div>\r\n\r\n                <h3>Specify your search</h3>\r\n\r\n                <div class=\"row align-items-center justify-content-center \">\r\n                    <div class=\"col-md-4\"><h5>Coronavirus Property</h5></div>\r\n                    <div class=\"col-md-4\">\r\n                        <select\r\n                            value={this.state.property}\r\n                            onChange={event => this.setState({ property: event.target.value })}\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            {/* <option value=\"pop_est\">Population</option>\r\n                    <option value=\"name_len\">Name length</option>\r\n                <option value=\"gdp_md_est\">GDP</option> */}\r\n                            <option value=\"reproduction_rate\">R Rate</option>\r\n                            <option value=\"new_cases\">New Cases</option>\r\n                            <option value=\"new_cases_per_million\">New Cases Per Million</option>\r\n                            <option value=\"total_cases\">Total Cases</option>\r\n                            <option value=\"total_cases_per_million\">Total Cases Per Million</option>\r\n                            <option value=\"new_deaths\">New Deaths</option>\r\n                            <option value=\"new_deaths_per_million\">New Deaths Per Million</option>\r\n                            <option value=\"total_cases\">Total Deaths</option>\r\n                            <option value=\"total_deaths_per_million\">Total Deaths Per Million</option>\r\n                            <option value=\"new_tests\">New Tests</option>\r\n                            <option value=\"new_tests_per_thousand\">New Tests Per Thousand</option>\r\n                            <option value=\"total_tests\">Total Tests</option>\r\n                            <option value=\"total_tests_per_thousand\">Total Tests Per Thousand</option>\r\n                            <option value=\"total_vaccinations\">Total Vaccinations</option>\r\n                            <option value=\"total_vaccinations_per_hundred\">Total Vaccinations Per Hundred</option>\r\n                            <option value=\"people_vaccinated\">People Vaccinated</option>\r\n                            <option value=\"people_vaccinated_per_hundred\">People Vaccinated Per Hundred</option>\r\n                            <option value=\"stringency_index\">Stringency Index</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row align-items-center justify-content-center mt-2\">\r\n                    <div class=\"col-md-4\"><h5>Data collection date</h5></div>\r\n                    <div class=\"col-md-4\">\r\n                        <input\r\n                            class=\"mt-2\"\r\n                            type=\"date\"\r\n                            id=\"start\"\r\n                            name=\"trip-start\"\r\n                            value={this.state.date}\r\n                            min=\"2020-01-01\"\r\n                            max={this.state.today}\r\n                            style={{ width: \"100%\" }}\r\n                            onChange={event => this.setState({ date: event.target.value })}\r\n                        ></input>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default WorldMap;\r\n"]},"metadata":{},"sourceType":"module"}