{"ast":null,"code":"import LinkModules from '../components/Links_Module';\nimport TitleBanner from '../components/TitleBanner';\nimport PageTitle from '../components/PageTitle';\n\nconst d3 = require('d3');\n\nconst TubeMaps = require('tubemaps');\n\nfunction TubePage() {\n  var svg = d3.select(\"svg\"),\n      width = +svg.attr(\"width\"),\n      height = +svg.attr(\"height\");\n  var format = d3.format(\",d\");\n  var color = d3.scaleOrdinal(d3.schemeCategory20c);\n  var pack = d3.pack().size([width, height]).padding(1.5);\n  d3.csv(\"flare.csv\", function (d) {\n    d.value = +d.value;\n    if (d.value) return d;\n  }, function (error, classes) {\n    if (error) throw error;\n    var root = d3.hierarchy({\n      children: classes\n    }).sum(function (d) {\n      return d.value;\n    }).each(function (d) {\n      if (id = d.data.id) {\n        var id,\n            i = id.lastIndexOf(\".\");\n        d.id = id;\n        d.package = id.slice(0, i);\n        d.class = id.slice(i + 1);\n      }\n    });\n    var node = svg.selectAll(\".node\").data(pack(root).leaves()).enter().append(\"g\").attr(\"class\", \"node\").attr(\"transform\", function (d) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    });\n    node.append(\"circle\").attr(\"id\", function (d) {\n      return d.id;\n    }).attr(\"r\", function (d) {\n      return d.r;\n    }).style(\"fill\", function (d) {\n      return color(d.package);\n    });\n    node.append(\"clipPath\").attr(\"id\", function (d) {\n      return \"clip-\" + d.id;\n    }).append(\"use\").attr(\"xlink:href\", function (d) {\n      return \"#\" + d.id;\n    });\n    node.append(\"text\").attr(\"clip-path\", function (d) {\n      return \"url(#clip-\" + d.id + \")\";\n    }).selectAll(\"tspan\").data(function (d) {\n      return d.class.split(/(?=[A-Z][^A-Z])/g);\n    }).enter().append(\"tspan\").attr(\"x\", 0).attr(\"y\", function (d, i, nodes) {\n      return 13 + (i - nodes.length / 2 - 0.5) * 10;\n    }).text(function (d) {\n      return d;\n    });\n    node.append(\"title\").text(function (d) {\n      return d.id + \"\\n\" + format(d.value);\n    });\n  });\n}\n\n_c = TubePage;\nexport default TubePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TubePage\");","map":{"version":3,"sources":["C:/Users/yanni/Documents/App_Development/yanni-webpage/src/pages/Tube.js"],"names":["LinkModules","TitleBanner","PageTitle","d3","require","TubeMaps","TubePage","svg","select","width","attr","height","format","color","scaleOrdinal","schemeCategory20c","pack","size","padding","csv","d","value","error","classes","root","hierarchy","children","sum","each","id","data","i","lastIndexOf","package","slice","class","node","selectAll","leaves","enter","append","x","y","r","style","split","nodes","length","text"],"mappings":"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","sourcesContent":["import LinkModules from '../components/Links_Module';\r\nimport TitleBanner from '../components/TitleBanner';\r\nimport PageTitle from '../components/PageTitle';\r\nconst d3 = require('d3');\r\nconst TubeMaps = require('tubemaps');\r\n\r\nfunction TubePage() {\r\n\r\n    var svg = d3.select(\"svg\"),\r\n    width = +svg.attr(\"width\"),\r\n    height = +svg.attr(\"height\");\r\n\r\nvar format = d3.format(\",d\");\r\n\r\nvar color = d3.scaleOrdinal(d3.schemeCategory20c);\r\n\r\nvar pack = d3.pack()\r\n    .size([width, height])\r\n    .padding(1.5);\r\n\r\nd3.csv(\"flare.csv\", function(d) {\r\n  d.value = +d.value;\r\n  if (d.value) return d;\r\n}, function(error, classes) {\r\n  if (error) throw error;\r\n\r\n  var root = d3.hierarchy({children: classes})\r\n      .sum(function(d) { return d.value; })\r\n      .each(function(d) {\r\n        if (id = d.data.id) {\r\n          var id, i = id.lastIndexOf(\".\");\r\n          d.id = id;\r\n          d.package = id.slice(0, i);\r\n          d.class = id.slice(i + 1);\r\n        }\r\n      });\r\n\r\n  var node = svg.selectAll(\".node\")\r\n    .data(pack(root).leaves())\r\n    .enter().append(\"g\")\r\n      .attr(\"class\", \"node\")\r\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\r\n\r\n  node.append(\"circle\")\r\n      .attr(\"id\", function(d) { return d.id; })\r\n      .attr(\"r\", function(d) { return d.r; })\r\n      .style(\"fill\", function(d) { return color(d.package); });\r\n\r\n  node.append(\"clipPath\")\r\n      .attr(\"id\", function(d) { return \"clip-\" + d.id; })\r\n    .append(\"use\")\r\n      .attr(\"xlink:href\", function(d) { return \"#\" + d.id; });\r\n\r\n  node.append(\"text\")\r\n      .attr(\"clip-path\", function(d) { return \"url(#clip-\" + d.id + \")\"; })\r\n    .selectAll(\"tspan\")\r\n    .data(function(d) { return d.class.split(/(?=[A-Z][^A-Z])/g); })\r\n    .enter().append(\"tspan\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", function(d, i, nodes) { return 13 + (i - nodes.length / 2 - 0.5) * 10; })\r\n      .text(function(d) { return d; });\r\n\r\n  node.append(\"title\")\r\n      .text(function(d) { return d.id + \"\\n\" + format(d.value); });\r\n});\r\n\r\n}\r\n\r\nexport default TubePage;"]},"metadata":{},"sourceType":"module"}