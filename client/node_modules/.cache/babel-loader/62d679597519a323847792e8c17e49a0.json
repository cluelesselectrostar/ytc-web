{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yanni\\\\Documents\\\\App_Development\\\\yanni-webpage\\\\src\\\\blogs\\\\archive\\\\MDBlogImport.js\";\nimport React, { Component, useState, useEffect } from 'react'; //import AppMarkdown from '!!html-loader!./ffestiniog.md';\n\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\n/*\r\nclass BlogImport extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { markdown: '' };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // Get the contents from the Markdown file and put them in the React state, so we can reference it in render() below.\r\n    fetch(AppMarkdown).then(res => res.text()).then(text => this.setState({ markdown: text }));\r\n  }\r\n\r\n  render() {\r\n    const { markdown } = this.state;\r\n    return <ReactMarkdown source={markdown} />;\r\n  }\r\n}\r\n\r\nfunction MDImport(require_name) {\r\n\r\n    const file_name = require_name;\r\n    const [post, setPost] = useState('');\r\n\r\n    \r\n    useEffect(() => {\r\n        import(`${file_name}`)\r\n            .then(res => {\r\n                fetch(res.default)\r\n                    .then(res => res.text())\r\n                    .then(res => setPost(res))\r\n                    .catch(err => console.log(err));\r\n            })\r\n            .catch(err => console.log(err));\r\n    });\r\n\r\n    return (\r\n        <div class=\"align-items-md-stretch h-100 p-5\">\r\n            <ReactMarkdown remarkPlugins={[gfm]} children={post} />\r\n        </div>\r\n    );\r\n    \r\n    //return{ __html: 'Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello'};\r\n\r\n}*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MDImport extends Component {\n  constructor() {\n    super();\n    this.state = {\n      markdown: null\n    };\n  }\n  /*\r\n  componentWillMount() {\r\n    // Get the contents from the Markdown file and put them in the React state, so we can reference it in render() below.\r\n    fetch(require(`${this.props.filename}`)).then(res => res.text()).then(text => this.setState({ markdown: text }));\r\n  }\r\n    componentDidMount() {\r\n    const readmePath = require(`${this.props.filename}`);\r\n  \r\n    fetch(readmePath)\r\n      .then(response => {\r\n        return response.text()\r\n      })\r\n      .then(text => {\r\n        this.setState({\r\n          markdown: text\r\n        })\r\n      })\r\n  }\r\n  */\n\n\n  componentDidMount() {\n    fetch(`${this.props.filename}`).then(res => res.text()).then(markdown => this.setState(state => ({ ...state,\n      markdown\n    }))).catch(err => console.error(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      source: this.state.markdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default MDImport;","map":{"version":3,"sources":["C:/Users/yanni/Documents/App_Development/yanni-webpage/src/blogs/archive/MDBlogImport.js"],"names":["React","Component","useState","useEffect","ReactMarkdown","gfm","MDImport","constructor","state","markdown","componentDidMount","fetch","props","filename","then","res","text","setState","catch","err","console","error","render"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAE/BM,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGEC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAE,GAAE,KAAKC,KAAL,CAAWC,QAAS,EAAxB,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQL,QAAQ,IAAI,KAAKQ,QAAL,CAAeT,KAAD,KAAY,EAAE,GAAGA,KAAL;AAAYC,MAAAA;AAAZ,KAAZ,CAAd,CAFpB,EAGGS,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHlB;AAID;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBAAO,QAAC,aAAD;AAAe,MAAA,MAAM,EAAE,KAAKd,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AArC8B;;AAwCjC,eAAeH,QAAf","sourcesContent":["\r\n\r\nimport React, { Component, useState, useEffect } from 'react';\r\n//import AppMarkdown from '!!html-loader!./ffestiniog.md';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\n\r\n/*\r\nclass BlogImport extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { markdown: '' };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // Get the contents from the Markdown file and put them in the React state, so we can reference it in render() below.\r\n    fetch(AppMarkdown).then(res => res.text()).then(text => this.setState({ markdown: text }));\r\n  }\r\n\r\n  render() {\r\n    const { markdown } = this.state;\r\n    return <ReactMarkdown source={markdown} />;\r\n  }\r\n}\r\n\r\nfunction MDImport(require_name) {\r\n\r\n    const file_name = require_name;\r\n    const [post, setPost] = useState('');\r\n\r\n    \r\n    useEffect(() => {\r\n        import(`${file_name}`)\r\n            .then(res => {\r\n                fetch(res.default)\r\n                    .then(res => res.text())\r\n                    .then(res => setPost(res))\r\n                    .catch(err => console.log(err));\r\n            })\r\n            .catch(err => console.log(err));\r\n    });\r\n\r\n    return (\r\n        <div class=\"align-items-md-stretch h-100 p-5\">\r\n            <ReactMarkdown remarkPlugins={[gfm]} children={post} />\r\n        </div>\r\n    );\r\n    \r\n    //return{ __html: 'Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello'};\r\n\r\n}*/\r\n\r\n\r\nclass MDImport extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = { markdown: null };\r\n  }\r\n\r\n  /*\r\n  componentWillMount() {\r\n    // Get the contents from the Markdown file and put them in the React state, so we can reference it in render() below.\r\n    fetch(require(`${this.props.filename}`)).then(res => res.text()).then(text => this.setState({ markdown: text }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    const readmePath = require(`${this.props.filename}`);\r\n  \r\n    fetch(readmePath)\r\n      .then(response => {\r\n        return response.text()\r\n      })\r\n      .then(text => {\r\n        this.setState({\r\n          markdown: text\r\n        })\r\n      })\r\n  }\r\n  */\r\n\r\n  componentDidMount() {\r\n    fetch(`${this.props.filename}`)\r\n      .then(res => res.text())\r\n      .then(markdown => this.setState((state) => ({ ...state, markdown })))\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  render() {\r\n    return <ReactMarkdown source={this.state.markdown} />;\r\n  }\r\n}\r\n\r\nexport default MDImport;\r\n"]},"metadata":{},"sourceType":"module"}