{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yanni\\\\Documents\\\\App_Development\\\\yanni-webpage\\\\src\\\\covid_tracker\\\\worldmap.js\";\nimport GeoChart from './Geochart'; // import coviddata from './covid.json';\n\nimport React, { useEffect, useRef, useState, Component } from \"react\";\nimport data from './custom.geo.json';\nimport './worldmap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WorldMap extends Component {\n  constructor(props) {\n    super(props);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 2); // just to be safe, limit data to 2 days ago\n\n    yesterday.toDateString();\n    console.log(yesterday);\n    var dd = String(yesterday.getDate()).padStart(2, '0');\n    var mm = String(yesterday.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = yesterday.getFullYear();\n    var date_string = yyyy + '-' + mm + '-' + dd;\n    this.state = {\n      property: \"total_cases\",\n      date: date_string,\n      coviddata: []\n    };\n  }\n\n  async componentWillMount() {\n    fetch('https://covid.ourworldindata.org/data/owid-covid-data.json').then(response => response.json()).then(data => {\n      this.setState({\n        coviddata: data\n      });\n      console.log(data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(GeoChart, {\n        data: data,\n        coviddata: this.props.import_covid === null ? this.state.coviddata : this.props.import_covid,\n        property: this.state.property,\n        date: this.state.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Specify your search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row align-items-md-stretch justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Coronavirus Property\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: this.state.property,\n            onChange: event => this.setState({\n              property: event.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"reproduction_rate\",\n              children: \"R Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"new_cases\",\n              children: \"New Cases\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"new_cases_per_million\",\n              children: \"New Cases Per Million\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"total_cases\",\n              children: \"Total Cases\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"total_cases_per_million\",\n              children: \"Total Cases Per Million\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"new_deaths\",\n              children: \"New Deaths\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"new_deaths_per_million\",\n              children: \"New Deaths Per Million\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"total_cases\",\n              children: \"Total Deaths\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"total_deaths_per_million\",\n              children: \"Total Deaths Per Million\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"new_tests\",\n              children: \"New Tests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"new_tests_per_thousand\",\n              children: \"New Tests Per Thousand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"total_tests\",\n              children: \"Total Tests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"total_tests_per_thousand\",\n              children: \"Total Tests Per Thousand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"total_vaccinations\",\n              children: \"Total Vaccinations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"total_vaccinations_per_hundred\",\n              children: \"Total Vaccinations Per Hundred\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"people_vaccinated\",\n              children: \"People Vaccinated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"people_vaccinated_per_hundred\",\n              children: \"People Vaccinated Per Hundred\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"stringency_index\",\n              children: \"Stringency Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row align-items-md-stretch justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Data collection date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"mt-2\",\n          type: \"date\",\n          id: \"start\",\n          name: \"trip-start\",\n          value: this.state.date,\n          min: \"2020-01-01\",\n          max: this.state.date_string,\n          onChange: event => this.setState({\n            date: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WorldMap;","map":{"version":3,"sources":["C:/Users/yanni/Documents/App_Development/yanni-webpage/src/covid_tracker/worldmap.js"],"names":["GeoChart","React","useEffect","useRef","useState","Component","data","WorldMap","constructor","props","today","Date","yesterday","setDate","getDate","toDateString","console","log","dd","String","padStart","mm","getMonth","yyyy","getFullYear","date_string","state","property","date","coviddata","componentWillMount","fetch","then","response","json","setState","render","import_covid","event","target","value"],"mappings":"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","sourcesContent":["import GeoChart from './Geochart';\r\n// import coviddata from './covid.json';\r\nimport React, { useEffect, useRef, useState, Component } from \"react\";\r\nimport data from './custom.geo.json';\r\nimport './worldmap.css';\r\n\r\nclass WorldMap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const today = new Date()\r\n        const yesterday = new Date(today)\r\n        yesterday.setDate(yesterday.getDate() - 2) // just to be safe, limit data to 2 days ago\r\n        yesterday.toDateString()\r\n        console.log(yesterday);\r\n\r\n        var dd = String(yesterday.getDate()).padStart(2, '0');\r\n        var mm = String(yesterday.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = yesterday.getFullYear();\r\n\r\n        var date_string = yyyy + '-' + mm + '-' + dd;\r\n\r\n        this.state = {\r\n            property: \"total_cases\",\r\n            date: date_string,\r\n            coviddata: []\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        fetch('https://covid.ourworldindata.org/data/owid-covid-data.json')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    coviddata: data\r\n                });\r\n                console.log(data);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GeoChart\r\n                    data={data}\r\n                    coviddata={\r\n                        (this.props.import_covid === null) ? this.state.coviddata : this.props.import_covid\r\n                    }\r\n                    property={this.state.property}\r\n                    date={this.state.date}\r\n                />\r\n\r\n                <h3>Specify your search</h3>\r\n\r\n                <div class=\"row align-items-md-stretch justify-content-center\">\r\n                    <div class=\"col-md-4\"><h5>Coronavirus Property</h5></div>\r\n                    <div class=\"col-md-4\">\r\n                        <select\r\n                            value={this.state.property}\r\n                            onChange={event => this.setState({ property: event.target.value })}\r\n                        >\r\n                            {/* <option value=\"pop_est\">Population</option>\r\n                    <option value=\"name_len\">Name length</option>\r\n                <option value=\"gdp_md_est\">GDP</option> */}\r\n                            <option value=\"reproduction_rate\">R Rate</option>\r\n                            <option value=\"new_cases\">New Cases</option>\r\n                            <option value=\"new_cases_per_million\">New Cases Per Million</option>\r\n                            <option value=\"total_cases\">Total Cases</option>\r\n                            <option value=\"total_cases_per_million\">Total Cases Per Million</option>\r\n                            <option value=\"new_deaths\">New Deaths</option>\r\n                            <option value=\"new_deaths_per_million\">New Deaths Per Million</option>\r\n                            <option value=\"total_cases\">Total Deaths</option>\r\n                            <option value=\"total_deaths_per_million\">Total Deaths Per Million</option>\r\n                            <option value=\"new_tests\">New Tests</option>\r\n                            <option value=\"new_tests_per_thousand\">New Tests Per Thousand</option>\r\n                            <option value=\"total_tests\">Total Tests</option>\r\n                            <option value=\"total_tests_per_thousand\">Total Tests Per Thousand</option>\r\n                            <option value=\"total_vaccinations\">Total Vaccinations</option>\r\n                            <option value=\"total_vaccinations_per_hundred\">Total Vaccinations Per Hundred</option>\r\n                            <option value=\"people_vaccinated\">People Vaccinated</option>\r\n                            <option value=\"people_vaccinated_per_hundred\">People Vaccinated Per Hundred</option>\r\n                            <option value=\"stringency_index\">Stringency Index</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row align-items-md-stretch justify-content-center\">\r\n                    <div class=\"col-md-4\"><h5>Data collection date</h5></div>\r\n                    <input\r\n                        class=\"mt-2\"\r\n                        type=\"date\"\r\n                        id=\"start\"\r\n                        name=\"trip-start\"\r\n                        value={this.state.date}\r\n                        min=\"2020-01-01\"\r\n                        max={this.state.date_string}\r\n                        onChange={event => this.setState({ date: event.target.value })}\r\n                    ></input>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default WorldMap;\r\n"]},"metadata":{},"sourceType":"module"}